# set working directory
setwd("/Users/shengwong/Documents/GitHub/Fall2018-Proj1-wsan5277yyyy/output")
# Install and load libraries
packages.used=c("tm", "wordcloud", "RColorBrewer", "dplyr", "tydytext",
"tidyverse","DT","scales","wordcloud2","gridExtra",
"ngram","tidyr","janeaustenr","wordcloud","igraph","ggraph","syuzhet")
# check packages that need to be installed.
packages.needed=setdiff(packages.used,
intersect(installed.packages()[,1],
packages.used))
# install additional packages
if(length(packages.needed)>0){
install.packages(packages.needed, dependencies = TRUE,
repos='http://cran.us.r-project.org')
}
library(tm)
library(wordcloud)
library(RColorBrewer)
library(dplyr)
library(tidytext)
library(tidyverse)
library(DT)
library(scales)
library(wordcloud2)
library(gridExtra)
library(ngram)
library(tidyr)
library(janeaustenr)
library(wordcloud)
library(igraph)
library(ggraph)
library(syuzhet)
# Load the processed text data along with demographic information on contributors
hm_data <- read_csv("../output/processed_moments.csv")
urlfile<-'https://raw.githubusercontent.com/rit-public/HappyDB/master/happydb/data/demographic.csv'
demo_data <- read_csv(urlfile)
# Combine both the data sets and keep the required columns for analysis
hm_data <- hm_data %>%
inner_join(demo_data, by = "wid") %>%
select(wid,
original_hm,
cleaned_hm,
gender,
marital,
parenthood,
reflection_period,
age,
country,
ground_truth_category,
text,
predicted_category) %>%
mutate(count = sapply(hm_data$text, wordcount)) %>%
filter(gender %in% c("m", "f")) %>%
filter(marital %in% c("single", "married")) %>%
filter(parenthood %in% c("n", "y")) %>%
filter(reflection_period %in% c("24h", "3m")) %>%
mutate(reflection_period = fct_recode(reflection_period,
months_3 = "3m", hours_24 = "24h"))
# Sort hm_data by country "USA", then divide them by four generation groups
hm_data$age <- as.integer(hm_data$age)
new_data <- hm_data[-which(is.na(hm_data$age)),]
new_data <- new_data[new_data$country=="USA",]
new_data$words <- sapply(strsplit(new_data$cleaned_hm, " "), length)
new_data1 <- new_data[new_data$words <= 50,]
group1 <-new_data1[which(new_data1$age >=17 & new_data1$age <= 37),]
group1$group <- "Millennial"
group2 <-new_data1[which(new_data1$age >=38 & new_data1$age <= 53),]
group2$group <- "Gen X"
group3 <-new_data1[which(new_data1$age >=54 & new_data1$age <= 72),]
group3$group <- "Baby Boomer"
group4 <-new_data1[which(new_data1$age >=73 & new_data1$age <= 93),]
group4$group <- "Silent"
group_boxplot <- rbind(group1,group2,group3,group4)
group_boxplot$group <- factor(group_boxplot$group, levels = c("Millennial","Gen X","Baby Boomer","Silent"))
ggplot(group_boxplot, aes(x=group, y=words, color=group)) +
geom_boxplot()
# regroup our generation Groups
Millennial <- new_data %>%
select(wid, cleaned_hm, gender, age, text,count,predicted_category) %>%
filter(age>=17 & age<=37)%>%
mutate(group="Millennial")
Gen_X <- new_data %>%
select(wid, cleaned_hm, gender, age, text,count,predicted_category) %>%
filter(age>=38 & age<=53)%>%
mutate(group="Gen X")
Baby_Boomer <- new_data %>%
select(wid, cleaned_hm, gender, age, text,count,predicted_category) %>%
filter(age>=54 & age<=72)%>%
mutate(group = "Baby Boomer")
Silent <- new_data %>%
select(wid, cleaned_hm, gender, age, text,count,predicted_category) %>%
filter(age>=73 & age <=93)%>%
mutate(group = "Silent")
# Millennial group's word cloud
tidy_M <- Millennial %>%
unnest_tokens(word, text)
freq_M <- tidy_M %>%
count(word, sort = TRUE)
wordcloud(freq_M$word,freq_M$n,
scale=c(5,0.2),
max.words=100,
min.freq=1,
random.order=FALSE,
rot.per=0.3,
use.r.layout=T,
random.color=FALSE,
colors=brewer.pal(9, "Accent"))
